1.数据数组的操作：
//1.1数组的变异方法
不能用下标操作
push 末尾添加
pop 末尾删除
shift 行首删除
unshift 行首添加
splice 截取-----splice(下标，删除的条数，在当前位置 增加的内容)
sort 排序
reverse 取反
//1.2使用Vue.set(vm.msg,下标，变更的内容)
//1.3使用vm.$set(vm.msg,下标，变更的内容)

2.不想用div渲染，可以换成<template>包裹
3.更新字典数据，用Vue.set(vm.msg,"","")  或  vm.$set(vm.msg,"","")

4.h5编码规则，table>tbody,tbody里只能放tr
<tbody><tr is="component"></tr>/tobody>
<ul><li is="component"></li></ul>
<select><option is = "component"></option></select>

5.组件数据，要求是一个函数要有返回值，data(){return}或data:function(){
    return
}

6.获取dom节点，设置<div ref="refName"></div>，获取this.$refs.refName.inneHTML

7.父子组件传数据：父组件中设置参数，传递给子组件，子组件用props:[""]接收，子组件不能修改父组件中的参数，否则会报错。可以通过在子抓紧设置自己的data，data(){return {
    number
}},更改里面的数据

8.props特性
//8.1参数不会展示在dom标签中
//8.2可以在子组件中通过差值表达式获取参数的值
非props特性：
//8.3参数会显示在dom标签中
//8.4不能直接获取参数的值

9.监听原生事件用@click.native

10.非父子组件间的传值：
Vue.prototype.bus = new Vue()

11.vue作用域插槽
//11.1子组件用<slot></slot>封装
//11.2父组件用<template slot-scope="变量名">
{{变量名.参数}}
</template>

12.动态组件，vue自带：
<component :is></component>

13.动画效果原理:通过在dom上增加样式来实现
<transition name="fade"></transition>
//如果不写name，则默认为v-enter,v-enter-active
////出现
//第1针：创建fade-enter,fade-enter-active
//第2针，销毁fade-enter,创建fade-enter-to
//第3针，销毁fade-enter-active,销毁fade-enter-to 
////消失
//第1针：创建fade-leave,fade-leave-active
//第2针，销毁fade-leave,创建fade-leave-to
//第3针，销毁fade-leave-active,销毁fade-leave-to
.v-enter,.v-leave-to{
    opacity:0
}
.v-enter-active,.v-leave-active{
    transition:opacity 1s;
}

14.列表过渡：
<transition-group></transition-group>
+<style></style>

15.transition中的钩子函数：
<transition
        name="fade"
        @before-enter="handleBeforeEnter"
        @enter = "handleEnter"
        @after-enter="handleAfterEnter"
        >
methods:{
    handleBeforeEnter(el){},
    handleEnter(el,done){
        done()
    },
    handleAfterEnter(el){}
}

16.配置ssh
//16.1步骤1.检查是否已经存在SSH Key
ls -al ~/.ssh
//16.1.1 ssh-keygen -t rsa -C "your_email@example.com"
//16.1.2 pbcopy < ~/.ssh/id_rsa.pub 获得的SSH Key粘贴到
//16.2 打开GitLab, 登录->点击右上角的用户头像->点击settings->在settings里找到SSH的设置->点击“ADD SSH KEY”按钮添加->将已经获得的SSH Key粘贴到“Key”，标题可以随便取，这样就保持了本地与服务器端的联系.

17.创建项目
npm install --global vue-cli
vue init webpack my-project
cd my-project
npm install
npm run dev

18.样式依赖:stylus
cnpm i stylus -S
cnpm i stylus-loader -S

19./* 使用stlus样式:lang="stylus"，要使该样式只对class="header"作用的话，可加上scoped */

20.reset.css里面：
html {overflow-x: hidden;height: 100%;font-size: 50px;-webkit-tap-highlight-color: transparent;}
相对50px，1rem = html font-size = 50px，所以,43px =43 * 1/50px=43/50=0.86rem
,设计稿是两倍尺寸，所以代码里的像素要除以2，再除以50px=rem单位,或者两倍尺寸除以100px

21.定义全局css样式，并在stylus中使用
//在src/assets/style/新建varibles.styl
//样式里面引入样式要用@import
//“@” 代表src这个路径，如果在css中引入其他的css，又要使用@的话要变成："~@"

22.自定义路径代表符:
//22.1 build/webpack.base.conf.js/
//22.2 resolve:{
    alias:{
        "styles":resolve("src/assets/styles")
    }
}

23.企业级开发，不同功能创建不同分支

24.轮播图组件
https://github.com/surmon-china/vue-awesome-swiper
cnpm i vue-awesome-swiper@2.6.7 -S

25.全局使用vue-awesome-swiper,main.js
import Vue from 'vue'
import VueAwesomeSwiper from 'vue-awesome-swiper'

// require styles
import 'swiper/dist/css/swiper.css'

Vue.use(VueAwesomeSwiper, /* { default global options } */)

//图片地址
http://piao.qunar.com/touch/

26.将长字符串用省略号显示
ellipsis()
    overflow:hidden
    white-space:nowrap
    text-overflow:ellipsis


27.vue中发送ajax的方法：
vue-resource
axios(推荐使用)
//cnpm i axios -S
//axios使用:
//27.1import axios from "axios
//27.2使用生命周期函数mounted (){}
//27.2.1mounted (){
    this.getHomeInfo()
}
//static放置静态文件/mock文件夹/index.json,只有static里的内容能被外部访问到
//防止被提交到仓库，在.gitignore中添加static/mock
//在home.vue中写axios请求，可以传给每一个子组件

28.对api下json的请求转发到static/mock/xx.json下，使用vue中的proxy代理
//config文件夹/index.js文件
////dev:{
    proxyTable:{
        "/api":{
            target:"http://localhost:8080",
            pathRewrite:{
                //一旦请求是以api开头，转发到'/static/mock下'
                "^/api":"/static/mock"
            }
        }
    }
}

29.v-if="list.length",当list为空数组，length为0， v-if=“false”
30.页面跳转
<router-link></router-link>

31.解决列表区域不能拖动，引入第三方包，better-scroll
31.1 cnpm install better-scroll --save
31.2 使用参考文档：https://github.com//ustbhuangyi/better-scroll
31.3 使用better-scroll必须符合下列结构：
    <div>
        <ul>
            <li></li>
            <li></li>
            <li></li>
        </ul>
    </div>
31.4
    import BScroll from 'better-scroll'
    const wrapper = document.querySelector('.wrapper')
    const scroll = new BScroll(wrapper)//创建一个新BScroll的实例，接收一个dom元素（使用ref获取dom元素）

32.发送ajax的步骤
32.1在最外面的页面建立，import axios from "axios"
32.2 mounted(){
    this.getCityInfo()
}
33.大量数据的传递用vuex
33.1安装cnpm install vuex --save
33.2 创建store，src/store/index.js
【
    import Vue from "vue"
import Vuex from "vuex"
Vue.use(Vuex)
export default new Vuex.Store({
    state:{
        city:"北京"
    }
})
】
33.3 main.js里import
调用state，首先调用actions，再调用mutations
33.4
//state:储存公用数据
//mutations:储存同步数据的改变
//action:异步数据

34.webpack默认不支持通过ip访问，
在package.json里配置，
"scripts":{"dev":--host 0.0.0.0}
    ifconfig,获取inet本机ip -> 10.71.41.48
    输入10.71.41.48:8080访问

35.解决手机端不支持promise,解决白屏问题
    cnpm install babel-polyfill --save
    在main.js中,import 'babel-polyfill'

36.打包编译上线过程
    >命令行：npm run build -> 生成的dist文件夹，就是最终要上线的代码。
    >将dist里文件放在后端服务器的根目录下即可。
    >修改dist文件所放的路径：config - index.js - build:{assetsPublicPath:'/project'}
    则相应打开的路径为：localhost/project

37.dist详解：
    >static
        >css
        >js
            >app.js > 各个逻辑代码
            >manifest.js > 打包的配置文件
            >vendor.js > 各个组件公用的代码

38.vue知识点
    >vue-rooter
    >vuex
    >vue服务端渲染

39.https://www.imooc.com/learn/935